# app/qa/schema.py
from __future__ import annotations
from typing import List, Optional, Dict, Any
from pydantic import BaseModel, Field

class Citation(BaseModel):
    # chunk_id is optional because FAISS metadata may not include it
    chunk_id: Optional[str] = None
    source: Optional[str] = None
    path: Optional[str] = None
    section: Optional[str] = None

class AnswerPayload(BaseModel):
    answer: str = Field(..., description="Final answer string generated by the model.")
    citations: List[Citation] = Field(
        default_factory=list,
        description="List of supporting citations from retrieved documents."
    )
    confidence: float = Field(
        0.0,
        ge=0.0,
        le=1.0,
        description="Confidence score between 0.0 and 1.0."
    )
    safety: Dict[str, Any] = Field(
        default_factory=dict,
        description="Safety flags and filtering information."
    )
