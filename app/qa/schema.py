# app/qa/schema.py
from __future__ import annotations

from typing import Any

from pydantic import BaseModel, Field


class Citation(BaseModel):
    # chunk_id is optional because FAISS metadata may not include it
    chunk_id: str | None = None
    source: str | None = None
    path: str | None = None
    section: str | None = None


class AnswerPayload(BaseModel):
    answer: str = Field(..., description="Final answer string generated by the model.")
    citations: list[Citation] = Field(
        default_factory=list, description="List of supporting citations from retrieved documents."
    )
    confidence: float = Field(
        0.0, ge=0.0, le=1.0, description="Confidence score between 0.0 and 1.0."
    )
    safety: dict[str, Any] = Field(
        default_factory=dict, description="Safety flags and filtering information."
    )
